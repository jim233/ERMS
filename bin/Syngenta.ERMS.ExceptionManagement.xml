<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syngenta.ERMS.ExceptionManagement</name>
    </assembly>
    <members>
        <member name="T:Syngenta.ERMS.ExceptionManagement.BaseApplicationException">
            <summary>
            Base Application Exception Class. You can use this as the base exception object from
            which to derive your applications exception hierarchy.
            </summary>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.BaseApplicationException.#ctor">
            <summary>
            Constructor with no params.
            </summary>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.BaseApplicationException.#ctor(System.String)">
            <summary>
            Constructor allowing the Message property to be set.
            </summary>
            <param name="message">String setting the message of the exception.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.BaseApplicationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor allowing the Message and InnerException property to be set.
            </summary>
            <param name="message">String setting the message of the exception.</param>
            <param name="inner">Sets a reference to the InnerException.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.BaseApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for deserialization of the exception class.
            </summary>
            <param name="info">Represents the SerializationInfo of the exception.</param>
            <param name="context">Represents the context information of the exception.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.BaseApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Override the GetObjectData method to serialize custom values.
            </summary>
            <param name="info">Represents the SerializationInfo of the exception.</param>
            <param name="context">Represents the context information of the exception.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.BaseApplicationException.InitializeEnvironmentInformation">
            <summary>
            Initialization function that gathers environment information safely.
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.BaseApplicationException.MachineName">
            <summary>
            Machine name where the exception occurred.
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.BaseApplicationException.CreatedDateTime">
            <summary>
            Date and Time the exception was created.
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.BaseApplicationException.AppDomainName">
            <summary>
            AppDomain name where the exception occurred.
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.BaseApplicationException.ThreadIdentityName">
            <summary>
            Identity of the executing thread on which the exception was created.
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.BaseApplicationException.WindowsIdentityName">
            <summary>
            Windows identity under which the code was running.
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.BaseApplicationException.AdditionalInformation">
            <summary>
            Collection allowing additional information to be added to the exception.
            </summary>
        </member>
        <member name="T:Syngenta.ERMS.ExceptionManagement.ExceptionManager">
            <summary>
            The Exception Manager class manages the publishing of exception information based on settings in the configuration file.
            </summary>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.ExceptionManager.#ctor">
            <summary>
            Private constructor to restrict an instance of this class from being created.
            </summary>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.ExceptionManager.Publish(System.Exception)">
            <summary>
            Static method to publish the exception information.
            </summary>
            <param name="exception">The exception object whose information should be published.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.ExceptionManager.Publish(System.Exception,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Static method to publish the exception information and any additional information.
            </summary>
            <param name="exception">The exception object whose information should be published.</param>
            <param name="additionalInfo">A collection of additional data that should be published along with the exception information.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.ExceptionManager.PublishToCustomPublisher(System.Exception,System.Collections.Specialized.NameValueCollection,Syngenta.ERMS.ExceptionManagement.PublisherSettings)">
            <summary>
            Private static helper method to publish the exception information to a custom publisher.
            </summary>
            <param name="exception">The exception object whose information should be published.</param>
            <param name="additionalInfo">A collection of additional data that should be published along with the exception information.</param>
            <param name="publisher">The PublisherSettings that contains the values of the publishers configuration.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.ExceptionManager.PublishToDefaultPublisher(System.Exception,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Private static helper method to publish the exception information to the default publisher.
            </summary>
            <param name="exception">The exception object whose information should be published.</param>
            <param name="additionalInfo">A collection of additional data that should be published along with the exception information.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.ExceptionManager.PublishInternalException(System.Exception,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Private static helper method to publish the exception information to the default publisher.
            </summary>
            <param name="exception">The exception object whose information should be published.</param>
            <param name="additionalInfo">A collection of additional data that should be published along with the exception information.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.ExceptionManager.Activate(System.String,System.String)">
            <summary>
            Private helper function to assist in run-time activations. Returns
            an object from the specified assembly and type.
            </summary>
            <param name="assembly">Name of the assembly file (w/out extension)</param>
            <param name="typeName">Name of the type to create</param>
            <returns>Instance of the type specified in the input parameters.</returns>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.ExceptionManager.SerializeToXml(System.Exception,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Public static helper method to serialize the exception information into XML.
            </summary>
            <param name="exception">The exception object whose information should be published.</param>
            <param name="additionalInfo">A collection of additional data that should be published along with the exception information.</param>
        </member>
        <member name="T:Syngenta.ERMS.ExceptionManagement.DefaultPublisher">
            <summary>
            Component used as the default publishing component if one is not specified in the config file.
            </summary>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.DefaultPublisher.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.DefaultPublisher.#ctor(System.String,System.String)">
            <summary>
            Constructor allowing the log name and application names to be set.
            </summary>
            <param name="logName">The name of the log for the DefaultPublisher to use.</param>
            <param name="applicationName">The name of the application.  This is used as the Source name in the event log.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.DefaultPublisher.Publish(System.Exception,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Method used to publish exception information and additional information.
            </summary>
            <param name="exception">The exception object whose information should be published.</param>
            <param name="additionalInfo">A collection of additional data that should be published along with the exception information.</param>
            <param name="configSettings">A collection of any additional attributes provided in the config settings for the custom publisher.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.DefaultPublisher.WriteToLog(System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            Helper function to write an entry to the Event Log.
            </summary>
            <param name="entry">The entry to enter into the Event Log.</param>
            <param name="type">The EventLogEntryType to be used when the entry is logged to the Event Log.</param>
        </member>
        <member name="T:Syngenta.ERMS.ExceptionManagement.CustomPublisherException">
            <summary>
            Summary description for ExceptionManagerExceptions.
            </summary>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.CustomPublisherException.#ctor">
            <summary>
            Constructor with no params.
            </summary>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.CustomPublisherException.#ctor(System.String)">
            <summary>
            Constructor allowing the Message property to be set.
            </summary>
            <param name="message">String setting the message of the exception.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.CustomPublisherException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor allowing the Message and InnerException property to be set.
            </summary>
            <param name="message">String setting the message of the exception.</param>
            <param name="inner">Sets a reference to the InnerException.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.CustomPublisherException.#ctor(System.String,System.String,System.String,Syngenta.ERMS.ExceptionManagement.PublisherFormat)">
            <summary>
            Constructor allowing the message, assembly name, type name, and publisher format to be set.
            </summary>
            <param name="message">String setting the message of the exception.</param>
            <param name="assemblyName">String setting the assembly name of the exception.</param>
            <param name="typeName">String setting the type name of the exception.</param>
            <param name="publisherFormat">String setting the publisher format of the exception.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.CustomPublisherException.#ctor(System.String,System.String,System.String,Syngenta.ERMS.ExceptionManagement.PublisherFormat,System.Exception)">
            <summary>
            Constructor allowing the Message and InnerException property to be set.
            </summary>
            <param name="message">String setting the message of the exception.</param>
            <param name="assemblyName">String setting the assembly name of the exception.</param>
            <param name="typeName">String setting the type name of the exception.</param>
            <param name="publisherFormat">String setting the publisher format of the exception.</param>
            <param name="inner">Sets a reference to the InnerException.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.CustomPublisherException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used for deserialization of the exception class.
            </summary>
            <param name="info">Represents the SerializationInfo of the exception.</param>
            <param name="context">Represents the context information of the exception.</param>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.CustomPublisherException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Override the GetObjectData method to serialize custom values.
            </summary>
            <param name="info">Represents the SerializationInfo of the exception.</param>
            <param name="context">Represents the context information of the exception.</param>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.CustomPublisherException.PublisherFormat">
            <summary>
            The exception format configured for the publisher that threw an exception.
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.CustomPublisherException.PublisherAssemblyName">
            <summary>
            The Assembly name of the publisher that threw an exception.
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.CustomPublisherException.PublisherTypeName">
            <summary>
            The Type name of the publisher that threw an exception.
            </summary>
        </member>
        <member name="T:Syngenta.ERMS.ExceptionManagement.ExceptionManagerInstaller">
            <summary>
            Installer class used to create two event sources for the 
            Exception Management Application Block to function correctly.
            </summary>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.ExceptionManagerInstaller.#ctor">
            <summary>
            Constructor with no params.
            </summary>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.ExceptionManagerInstaller.InitializeComponent">
            <summary>
            Initialization function to set internal variables.
            </summary>
        </member>
        <member name="T:Syngenta.ERMS.ExceptionManagement.ExceptionManagementMode">
            <summary>
            Enum containing the mode options for the exceptionManagement tag.
            </summary>
        </member>
        <member name="F:Syngenta.ERMS.ExceptionManagement.ExceptionManagementMode.Off">
            <summary>The ExceptionManager should not process exceptions.</summary>
        </member>
        <member name="F:Syngenta.ERMS.ExceptionManagement.ExceptionManagementMode.On">
            <summary>The ExceptionManager should process exceptions. This is the default.</summary>
        </member>
        <member name="T:Syngenta.ERMS.ExceptionManagement.PublisherMode">
            <summary>
            Enum containing the mode options for the publisher tag.
            </summary>
        </member>
        <member name="F:Syngenta.ERMS.ExceptionManagement.PublisherMode.Off">
            <summary>The ExceptionManager should not call the publisher.</summary>
        </member>
        <member name="F:Syngenta.ERMS.ExceptionManagement.PublisherMode.On">
            <summary>The ExceptionManager should call the publisher. This is the default.</summary>
        </member>
        <member name="T:Syngenta.ERMS.ExceptionManagement.PublisherFormat">
            <summary>
            Enum containing the format options for the publisher tag.
            </summary>
        </member>
        <member name="F:Syngenta.ERMS.ExceptionManagement.PublisherFormat.Exception">
            <summary>The ExceptionManager should call the IExceptionPublisher interface of the publisher. 
            This is the default.</summary>
        </member>
        <member name="F:Syngenta.ERMS.ExceptionManagement.PublisherFormat.Xml">
            <summary>The ExceptionManager should call the IExceptionXmlPublisher interface of the publisher.</summary>
        </member>
        <member name="T:Syngenta.ERMS.ExceptionManagement.ExceptionManagementSettings">
            <summary>
            Class that defines the exception management settings in the config file.
            </summary>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.ExceptionManagementSettings.AddPublisher(Syngenta.ERMS.ExceptionManagement.PublisherSettings)">
            <summary>
            Adds a PublisherSettings to the arraylist of publishers.
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.ExceptionManagementSettings.Mode">
            <summary>
            Specifies the whether the exceptionManagement settings are "on" or "off".
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.ExceptionManagementSettings.Publishers">
            <summary>
            An ArrayList containing all of the PublisherSettings listed in the config file.
            </summary>
        </member>
        <member name="T:Syngenta.ERMS.ExceptionManagement.PublisherSettings">
            <summary>
            Class that defines the publisher settings within the exception management settings in 
            the config file.
            </summary>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.PublisherSettings.IsExceptionFiltered(System.Type)">
            <summary>
            Determines whether the exception type is to be filtered out based on the includes and exclude
            types specified.
            </summary>
            <param name="exceptionType">The Type of the exception to check for filtering.</param>
            <returns>True is the exception type is to be filtered out, false if it is not filtered out.</returns>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.PublisherSettings.MatchesFilter(System.Type,Syngenta.ERMS.ExceptionManagement.TypeFilter)">
            <summary>
            Determines if a type is contained the supplied filter. 
            </summary>
            <param name="type">The Type to look for</param> 
            <param name="typeFilter">The Filter to test against the Type</param>
            <returns>true or false</returns>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.PublisherSettings.AddOtherAttributes(System.String,System.String)">
            <summary>
            Allows name/value pairs to be added to the Other Attributes collection.
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.PublisherSettings.Mode">
            <summary>
            Specifies the whether the exceptionManagement settings are "on" or "off".
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.PublisherSettings.ExceptionFormat">
            <summary>
            Specifies the whether the publisher supports the IExceptionXmlPublisher interface (value is set to "xml")
            or the publisher supports the IExceptionPublisher interface (value is either left off or set to "exception").
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.PublisherSettings.AssemblyName">
            <summary>
            The assembly name of the publisher component that will be used to invoke the object.
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.PublisherSettings.TypeName">
            <summary>
            The type name of the publisher component that will be used to invoke the object.
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.PublisherSettings.IncludeTypes">
            <summary>
            A semicolon delimited list of all exception types that the publisher will be invoked for. 
            A "*" can be used to specify all types and is the default value if this is left off.
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.PublisherSettings.ExcludeTypes">
            <summary>
            A semicolon delimited list of all exception types that the publisher will not be invoked for. 
            A "*" can be used to specify all types. The default is to exclude no types.
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.PublisherSettings.OtherAttributes">
            <summary>
            A collection of any other attributes included within the publisher tag in the config file. 
            </summary>
        </member>
        <member name="T:Syngenta.ERMS.ExceptionManagement.TypeFilter">
            <summary>
            TypeFilter class stores contents of the Include and Exclude filters provided in the
            configuration file
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.TypeFilter.AcceptAllTypes">
            <summary>
            Indicates if all types should be accepted for a filter
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.TypeFilter.Types">
            <summary>
            Collection of types for the filter
            </summary>
        </member>
        <member name="T:Syngenta.ERMS.ExceptionManagement.TypeInfo">
            <summary>
            TypeInfo class contains information about each type within a TypeFilter
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.TypeInfo.IncludeSubClasses">
            <summary>
            Indicates if subclasses are to be included with the type specified in the Include and Exclude filters
            </summary>
        </member>
        <member name="P:Syngenta.ERMS.ExceptionManagement.TypeInfo.ClassType">
            <summary>
            The Type class representing the type specified in the Include and Exclude filters
            </summary>
        </member>
        <member name="T:Syngenta.ERMS.ExceptionManagement.ExceptionManagerSectionHandler">
            <summary>
            The Configuration Section Handler for the "exceptionManagement" section of the config file. 
            </summary>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.ExceptionManagerSectionHandler.#ctor">
            <summary>
            The constructor for the ExceptionManagerSectionHandler to initialize the resource file.
            </summary>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.ExceptionManagerSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Builds the ExceptionManagementSettings and PublisherSettings structures based on the configuration file.
            </summary>
            <param name="parent">Composed from the configuration settings in a corresponding parent configuration section.</param>
            <param name="configContext">Provides access to the virtual path for which the configuration section handler computes configuration values. Normally this parameter is reserved and is null.</param>
            <param name="section">The XML node that contains the configuration information to be handled. section provides direct access to the XML contents of the configuration section.</param>
            <returns>The ExceptionManagementSettings struct built from the configuration settings.</returns>
        </member>
        <member name="M:Syngenta.ERMS.ExceptionManagement.ExceptionManagerSectionHandler.LoadTypeFilter(System.String[])">
            <summary>
            Creates TypeFilter with type information from the string array of type names.
            </summary>
            <param name="rawFilter">String array containing names of types to be included in the filter.</param>
            <returns>TypeFilter object containing type information.</returns>
        </member>
    </members>
</doc>
